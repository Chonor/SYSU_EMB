


ARM Macro Assembler    Page 1 


    1 00000000         ; InputOutput.s
    2 00000000         ; Runs on LM4F120/TM4C123
    3 00000000         ; Test the GPIO initialization functions by setting the 
                       LED
    4 00000000         ; color according to the status of the switches.
    5 00000000         ; The Reflex Test (no longer supported; each LED turns o
                       thers off):
    6 00000000         ; This program is functionally similar to SwitchTestMain
                       .c
    7 00000000         ; in Switch_4F120asm.  When switch #1 is pressed, the bl
                       ue
    8 00000000         ; LED comes on.  When switch #2 is pressed, the red LED
    9 00000000         ; comes on.  When both switches are pressed, the green L
                       ED
   10 00000000         ; comes on.  A short delay is inserted between
   11 00000000         ; polls of the buttons to compensate for your reflexes a
                       nd
   12 00000000         ; the button bounce.  The following color combinations c
                       an
   13 00000000         ; be made:
   14 00000000         ; Color    LED(s) Illumination Method
   15 00000000         ; dark     ---    release both buttons
   16 00000000         ; red      R--    press right button (#2)
   17 00000000         ; blue     --B    press left button (#1)
   18 00000000         ; green    -G-    press both buttons exactly together
   19 00000000         ; yellow   RG-    press right button, then press left bu
                       tton
   20 00000000         ; sky blue -GB    press left button, then press right bu
                       tton
   21 00000000         ; white    RGB    press either button, then press the ot
                       her
   22 00000000         ;                 button, then release the first button
   23 00000000         ; pink     R-B    press either button, then release the
   24 00000000         ;                 first button and immediately press the
                       
   25 00000000         ;                 other button
   26 00000000         ; Daniel Valvano
   27 00000000         ; September 11, 2013
   28 00000000         
   29 00000000         ;  This example accompanies the book
   30 00000000         ;  "Embedded Systems: Introduction to ARM Cortex M Micro
                       controllers"
   31 00000000         ;  ISBN: 978-1469998749, Jonathan Valvano, copyright (c)
                        2014
   32 00000000         ;  Section 4.2    Program 4.1
   33 00000000         ;
   34 00000000         ;Copyright 2014 by Jonathan W. Valvano, valvano@mail.ute
                       xas.edu
   35 00000000         ;   You may use, edit, run or distribute this file
   36 00000000         ;   as long as the above copyright notice remains
   37 00000000         ;THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHET
                       HER EXPRESS, IMPLIED
   38 00000000         ;OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WA
                       RRANTIES OF
   39 00000000         ;MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE AP
                       PLY TO THIS SOFTWARE.
   40 00000000         ;VALVANO SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR 
                       SPECIAL, INCIDENTAL,
   41 00000000         ;OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.



ARM Macro Assembler    Page 2 


   42 00000000         ;For more information about my classes, my research, and
                        my books, see
   43 00000000         ;http://users.ece.utexas.edu/~valvano/
   44 00000000         
   45 00000000         ; negative logic switch #2 connected to PF0 on the Launc
                       hpad
   46 00000000         ; red LED connected to PF1 on the Launchpad
   47 00000000         ; blue LED connected to PF2 on the Launchpad
   48 00000000         ; green LED connected to PF3 on the Launchpad
   49 00000000         ; negative logic switch #1 connected to PF4 on the Launc
                       hpad
   50 00000000         ; NOTE: The NMI (non-maskable interrupt) is on PF0.  Tha
                       t means that
   51 00000000         ; the Alternate Function Select, Pull-Up Resistor, Pull-
                       Down Resistor,
   52 00000000         ; and Digital Enable are all locked for PF0 until a valu
                       e of 0x4C4F434B
   53 00000000         ; is written to the Port F GPIO Lock Register.  After Po
                       rt F is
   54 00000000         ; unlocked, bit 0 of the Port F GPIO Commit Register mus
                       t be set to
   55 00000000         ; allow access to PF0's control registers.  On the LM4F1
                       20, the other
   56 00000000         ; bits of the Port F GPIO Commit Register are hard-wired
                        to 1, meaning
   57 00000000         ; that the rest of Port F can always be freely re-config
                       ured at any
   58 00000000         ; time.  Requiring this procedure makes it unlikely to a
                       ccidentally
   59 00000000         ; re-configure the JTAG and NMI pins as GPIO, which can 
                       lock the
   60 00000000         ; debugger out of the processor and make it permanently 
                       unable to be
   61 00000000         ; debugged or re-programmed.
   62 00000000 400253FC 
                       GPIO_PORTF_DATA_R
                               EQU              0x400253FC
   63 00000000 40025400 
                       GPIO_PORTF_DIR_R
                               EQU              0x40025400
   64 00000000 40025420 
                       GPIO_PORTF_AFSEL_R
                               EQU              0x40025420
   65 00000000 40025510 
                       GPIO_PORTF_PUR_R
                               EQU              0x40025510
   66 00000000 4002551C 
                       GPIO_PORTF_DEN_R
                               EQU              0x4002551C
   67 00000000 40025520 
                       GPIO_PORTF_LOCK_R
                               EQU              0x40025520
   68 00000000 40025524 
                       GPIO_PORTF_CR_R
                               EQU              0x40025524
   69 00000000 40025528 
                       GPIO_PORTF_AMSEL_R
                               EQU              0x40025528
   70 00000000 4002552C 



ARM Macro Assembler    Page 3 


                       GPIO_PORTF_PCTL_R
                               EQU              0x4002552C
   71 00000000 4C4F434B 
                       GPIO_LOCK_KEY
                               EQU              0x4C4F434B  ; Unlocks the GPIO_
                                                            CR register
   72 00000000 400FE608 
                       SYSCTL_RCGCGPIO_R
                               EQU              0x400FE608
   73 00000000         
   74 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   75 00000000                 THUMB
   76 00000000                 EXPORT           Start
   77 00000000         
   78 00000000         Start
   79 00000000 F000 F809       BL               PortF_Init  ; initialize input 
                                                            and output pins of 
                                                            Port F
   80 00000004         loop
   81 00000004 481A            LDR              R0, = FIFTHSEC ; R0 = FIFTHSEC 
                                                            (delay 0.2 second)
   82 00000006 F000 F803       BL               delay       ; delay at least (3
                                                            *R0) cycles
   83 0000000A F000 F82B       BL               Toggle      ; turn all of the L
                                                            EDs on
   84 0000000E E7F9            B                loop
   85 00000010         
   86 00000010         ;------------delay------------
   87 00000010         ; Delay function for testing, which delays about 3*count
                        cycles.
   88 00000010         ; Input: R0  count
   89 00000010         ; Output: none
   90 00000010 00516155 
                       ONESEC  EQU              5333333     ; approximately 1s 
                                                            delay at ~16 MHz cl
                                                            ock
   91 00000010 00145855 
                       QUARTERSEC
                               EQU              1333333     ; approximately 0.2
                                                            5s delay at ~16 MHz
                                                             clock
   92 00000010 001046AA 
                       FIFTHSEC
                               EQU              1066666     ; approximately 0.2
                                                            s delay at ~16 MHz 
                                                            clock
   93 00000010         delay
   94 00000010 1E40            SUBS             R0, R0, #1  ; R0 = R0 - 1 (coun
                                                            t = count - 1)
   95 00000012 D1FD            BNE              delay       ; if count (R0) != 
                                                            0, skip to 'delay'
   96 00000014 4770            BX               LR          ; return
   97 00000016         
   98 00000016         ;------------PortF_Init------------
   99 00000016         ; Initialize GPIO Port F for negative logic switches on 
                       PF0 and
  100 00000016         ; PF4 as the Launchpad is wired.  Weak internal pull-up
  101 00000016         ; resistors are enabled, and the NMI functionality on PF



ARM Macro Assembler    Page 4 


                       0 is
  102 00000016         ; disabled.  Make the RGB LED's pins outputs.
  103 00000016         ; Input: none
  104 00000016         ; Output: none
  105 00000016         ; Modifies: R0, R1, R2
  106 00000016         PortF_Init
  107 00000016 4917            LDR              R1, =SYSCTL_RCGCGPIO_R ; 1) act
                                                            ivate clock for Por
                                                            t F
  108 00000018 6808            LDR              R0, [R1]
  109 0000001A F040 0020       ORR              R0, R0, #0x20 ; set bit 5 to tu
                                                            rn on clock
  110 0000001E 6008            STR              R0, [R1]
  111 00000020 BF00            NOP
  112 00000022 BF00            NOP                          ; allow time for cl
                                                            ock to finish
  113 00000024 4914            LDR              R1, =GPIO_PORTF_LOCK_R ; 2) unl
                                                            ock the lock regist
                                                            er
  114 00000026 4815            LDR              R0, =0x4C4F434B ; unlock GPIO P
                                                            ort F Commit Regist
                                                            er
  115 00000028 6008            STR              R0, [R1]
  116 0000002A 4915            LDR              R1, =GPIO_PORTF_CR_R ; enable c
                                                            ommit for Port F
  117 0000002C F04F 0004       MOV              R0, #0x04   ; 1 means allow acc
                                                            ess
  118 00000030 6008            STR              R0, [R1]
  119 00000032 4914            LDR              R1, =GPIO_PORTF_AMSEL_R ; 3) di
                                                            sable analog functi
                                                            onality
  120 00000034 F04F 0000       MOV              R0, #0      ; 0 means analog is
                                                             off
  121 00000038 6008            STR              R0, [R1]
  122 0000003A 4913            LDR              R1, =GPIO_PORTF_PCTL_R ; 4) con
                                                            figure as GPIO
  123 0000003C F04F 0000       MOV              R0, #0x00000000 ; 0 means confi
                                                            gure Port F as GPIO
                                                            
  124 00000040 6008            STR              R0, [R1]
  125 00000042 4912            LDR              R1, =GPIO_PORTF_DIR_R ; 5) set 
                                                            direction register
  126 00000044 F04F 0004       MOV              R0, #0x04   ;  PF2 output
  127 00000048 6008            STR              R0, [R1]
  128 0000004A 4911            LDR              R1, =GPIO_PORTF_AFSEL_R ; 6) re
                                                            gular port function
                                                            
  129 0000004C F04F 0000       MOV              R0, #0      ; 0 means disable a
                                                            lternate function 
  130 00000050 6008            STR              R0, [R1]
  131 00000052 4910            LDR              R1, =GPIO_PORTF_PUR_R ; pull-up
                                                             resistors for PF4,
                                                            PF0
  132 00000054 F04F 0000       MOV              R0, #0x00   ; enable weak pull-
                                                            up on none
  133 00000058 6008            STR              R0, [R1]
  134 0000005A 490F            LDR              R1, =GPIO_PORTF_DEN_R ; 7) enab
                                                            le Port F digital p
                                                            ort



ARM Macro Assembler    Page 5 


  135 0000005C F04F 0004       MOV              R0, #0x04   ; 1 means enable di
                                                            gital I/O PF2
  136 00000060 6008            STR              R0, [R1]
  137 00000062 4770            BX               LR
  138 00000064         
  139 00000064         ;------------PortF_Output------------
  140 00000064         ; Set the output state of PF2.
  141 00000064         ; Input: R0  new state of PF
  142 00000064         ; Output: none
  143 00000064         ; Modifies: R1
  144 00000064         Toggle
  145 00000064 490D            LDR              R1, = 0x40025010
  146 00000066 6808            LDR              R0, [R1]
  147 00000068 F080 0004       EOR              R0, R0, #0x04
  148 0000006C 6008            STR              R0, [R1]
  149 0000006E 4770            BX               LR
  150 00000070         
  151 00000070                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  152 00000070                 END                          ; end of file
              001046AA 
              400FE608 
              40025520 
              4C4F434B 
              40025524 
              40025528 
              4002552C 
              40025400 
              40025420 
              40025510 
              4002551C 
              40025010 
Command Line: --debug --xref --cpu=Cortex-M4 --apcs=interwork --depend=.\main.d
 -o.\main.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\In
c\Luminary --predefine="__EVAL SETA 1" --list=.\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 74 in file main.s
   Uses
      None
Comment: .text unused
PortF_Init 00000016

Symbol: PortF_Init
   Definitions
      At line 106 in file main.s
   Uses
      At line 79 in file main.s
Comment: PortF_Init used once
Start 00000000

Symbol: Start
   Definitions
      At line 78 in file main.s
   Uses
      At line 76 in file main.s
Comment: Start used once
Toggle 00000064

Symbol: Toggle
   Definitions
      At line 144 in file main.s
   Uses
      At line 83 in file main.s
Comment: Toggle used once
delay 00000010

Symbol: delay
   Definitions
      At line 93 in file main.s
   Uses
      At line 82 in file main.s
      At line 95 in file main.s

loop 00000004

Symbol: loop
   Definitions
      At line 80 in file main.s
   Uses
      At line 84 in file main.s
Comment: loop used once
6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

FIFTHSEC 001046AA

Symbol: FIFTHSEC
   Definitions
      At line 92 in file main.s
   Uses
      At line 81 in file main.s
Comment: FIFTHSEC used once
GPIO_LOCK_KEY 4C4F434B

Symbol: GPIO_LOCK_KEY
   Definitions
      At line 71 in file main.s
   Uses
      None
Comment: GPIO_LOCK_KEY unused
GPIO_PORTF_AFSEL_R 40025420

Symbol: GPIO_PORTF_AFSEL_R
   Definitions
      At line 64 in file main.s
   Uses
      At line 128 in file main.s
Comment: GPIO_PORTF_AFSEL_R used once
GPIO_PORTF_AMSEL_R 40025528

Symbol: GPIO_PORTF_AMSEL_R
   Definitions
      At line 69 in file main.s
   Uses
      At line 119 in file main.s
Comment: GPIO_PORTF_AMSEL_R used once
GPIO_PORTF_CR_R 40025524

Symbol: GPIO_PORTF_CR_R
   Definitions
      At line 68 in file main.s
   Uses
      At line 116 in file main.s
Comment: GPIO_PORTF_CR_R used once
GPIO_PORTF_DATA_R 400253FC

Symbol: GPIO_PORTF_DATA_R
   Definitions
      At line 62 in file main.s
   Uses
      None
Comment: GPIO_PORTF_DATA_R unused
GPIO_PORTF_DEN_R 4002551C

Symbol: GPIO_PORTF_DEN_R
   Definitions
      At line 66 in file main.s
   Uses
      At line 134 in file main.s
Comment: GPIO_PORTF_DEN_R used once
GPIO_PORTF_DIR_R 40025400

Symbol: GPIO_PORTF_DIR_R



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 63 in file main.s
   Uses
      At line 125 in file main.s
Comment: GPIO_PORTF_DIR_R used once
GPIO_PORTF_LOCK_R 40025520

Symbol: GPIO_PORTF_LOCK_R
   Definitions
      At line 67 in file main.s
   Uses
      At line 113 in file main.s
Comment: GPIO_PORTF_LOCK_R used once
GPIO_PORTF_PCTL_R 4002552C

Symbol: GPIO_PORTF_PCTL_R
   Definitions
      At line 70 in file main.s
   Uses
      At line 122 in file main.s
Comment: GPIO_PORTF_PCTL_R used once
GPIO_PORTF_PUR_R 40025510

Symbol: GPIO_PORTF_PUR_R
   Definitions
      At line 65 in file main.s
   Uses
      At line 131 in file main.s
Comment: GPIO_PORTF_PUR_R used once
ONESEC 00516155

Symbol: ONESEC
   Definitions
      At line 90 in file main.s
   Uses
      None
Comment: ONESEC unused
QUARTERSEC 00145855

Symbol: QUARTERSEC
   Definitions
      At line 91 in file main.s
   Uses
      None
Comment: QUARTERSEC unused
SYSCTL_RCGCGPIO_R 400FE608

Symbol: SYSCTL_RCGCGPIO_R
   Definitions
      At line 72 in file main.s
   Uses
      At line 107 in file main.s
Comment: SYSCTL_RCGCGPIO_R used once
14 symbols
353 symbols in table
